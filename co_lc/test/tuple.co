# +ir -print
# +eval -print
let t = {1, {2, 3, {4, 5}, 6}, 7, 8} in
{t.0, t.1.0, t.1.1, t.1.2.0, t.1.2.1, t.1.3, t.2, t.3}

> +ir -print
> @main: {
> % Stack relative to frame pointer:
> %   -11  #return.7
> %   -10  #return.6
> %    -9  #return.5
> %    -8  #return.4
> %    -7  #return.3
> %    -6  #return.2
> %    -5  #return.1
> %    -4  #return.0
> %    -3  @old_pc
> %    -2  @old_fp
> %    -1  @old_sp
> %     0  t.3
> %     1  t.2
> %     2  t.1.3
> %     3  t.1.2.1
> %     4  t.1.2.0
> %     5  t.1.1
> %     6  t.1.0
> %     7  t.0
> @main:
>   sp-add 8
> start:
>   push 8
>   store-into fp[0]
>   push 7
>   store-into fp[1]
>   push 6
>   store-into fp[2]
>   push 5
>   store-into fp[3]
>   push 4
>   store-into fp[4]
>   push 3
>   store-into fp[5]
>   push 2
>   store-into fp[6]
>   push 1
>   store-into fp[7]
>   push fp[0]
>   store-into fp[-11]
>   push fp[1]
>   store-into fp[-10]
>   push fp[2]
>   store-into fp[-9]
>   push fp[3]
>   store-into fp[-8]
>   push fp[4]
>   store-into fp[-7]
>   push fp[5]
>   store-into fp[-6]
>   push fp[6]
>   store-into fp[-5]
>   push fp[7]
>   store-into fp[-4]
>   ret
> }

> +eval -print
> {1, 2, 3, 4, 5, 6, 7, 8}