# +ir -print
# +eval -print
let t = {1, {2, 3, {4, 5}, 6}, 7, 8} in
{t.0, t.1.0, t.1.1, t.1.2.0, t.1.2.1, t.1.3, t.2, t.3}

> +ir -print
> @main: {
> % Stack relative to frame pointer:
> %   -3  @old_pc
> %   -2  @old_fp
> %   -1  @old_sp
> %    0  #return.7
> %    1  #return.6
> %    2  #return.5
> %    3  #return.4
> %    4  #return.3
> %    5  #return.2
> %    6  #return.1
> %    7  #return.0
> %    8  t.3
> %    9  t.2
> %   10  t.1.3
> %   11  t.1.2.1
> %   12  t.1.2.0
> %   13  t.1.1
> %   14  t.1.0
> %   15  t.0
> @main:
>   sp-add 16
> start:
>   push 8
>   store-into fp[8] 
>   push 7
>   store-into fp[9] 
>   push 6
>   store-into fp[10] 
>   push 5
>   store-into fp[11] 
>   push 4
>   store-into fp[12] 
>   push 3
>   store-into fp[13] 
>   push 2
>   store-into fp[14] 
>   push 1
>   store-into fp[15] 
>   push fp[8]
>   store-into fp[0] 
>   push fp[9]
>   store-into fp[1] 
>   push fp[10]
>   store-into fp[2] 
>   push fp[11]
>   store-into fp[3] 
>   push fp[12]
>   store-into fp[4] 
>   push fp[13]
>   store-into fp[5] 
>   push fp[14]
>   store-into fp[6] 
>   push fp[15]
>   store-into fp[7] 
>   ret 8
> }

> +eval -print
> {1, 2, 3, 4, 5, 6, 7, 8}
