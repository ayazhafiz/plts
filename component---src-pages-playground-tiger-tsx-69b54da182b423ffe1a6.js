(self.webpackChunkwww=self.webpackChunkwww||[]).push([[7454],{72673:function(e,t,n){"use strict";n.d(t,{L:function(){return r}});var r={defaultToken:"invalid",escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,registers:/%?\b(r[0-9]+[dbw]?|([er]?([abcd][xhl]|cs|fs|ds|ss|sp|bp|ip|sil?|dil?))|[xyz]mm[0-9]+|sp|fp|lr)\b/,intelOperators:/PTR|(D|Q|[XYZ]MM)?WORD/,tokenizer:{root:[[/^<.*>$/,{token:"annotation"}],[/^[.a-zA-Z0-9_$?@].*:/,{token:"type.identifier"}],[/^"([^"\\]|\\.)*":/,{token:"type.identifier"}],[/^\s*[|][^|]*[|]/,{token:"type.identifier"}],[/^\s*[.a-zA-Z0-9_$|]*\s+(PROC|ENDP|DB|DD)/,{token:"type.identifier"}],[/^[.a-zA-Z0-9_$?@][^=]*=/,{token:"type.identifier"}],[/[.a-zA-Z_][.a-zA-Z_0-9]*/,{token:"keyword",next:"@rest"}],[/[(){}]/,{token:"operator",next:"@rest"}],{include:"@whitespace"}],rest:[[/^.*$/,{token:"@rematch",next:"@pop"}],[/@registers/,"variable.predefined"],[/@intelOperators/,"annotation"],[/[{}<>()[\]]/,"@brackets"],[/[|][^|]*[|]*/,"type.identifier"],[/\d*\.\d+([eE][-+]?\d+)?/,"number.float"],[/([$]|0[xX])[0-9a-fA-F]+/,"number.hex"],[/\d+/,"number"],[/#-?\d+/,"number"],[/[-+,*/!:&{}()]/,"operator"],[/"([^"\\]|\\.)*$/,"string.invalid"],[/"/,{token:"string.quote",bracket:"@open",next:"@string"}],[/'[^\\']'/,"string"],[/(')(@escapes)(')/,["string","string.escape","string"]],[/'/,"string.invalid"],[/%?[.?_$a-zA-Z@][.?_$a-zA-Z0-9@]*/,"type.identifier"],{include:"@whitespace"}],comment:[[/[^/*]+/,"comment"],[/\/\*/,"comment","@push"],["\\*/","comment","@pop"],[/[/*]/,"comment"]],string:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,{token:"string.quote",bracket:"@close",next:"@pop"}]],whitespace:[[/[ \t\r\n]+/,"white"],[/\/\*/,"comment","@comment"],[/\/\/.*$/,"comment"],[/[#;\\@].*$/,"comment"]]}}},14993:function(e,t,n){"use strict";n.r(t);var r=n(27378),i=n(6818),a=n(55676),o=n(74635),s=n(72673),c={"Eight Queens":'\nlet\n  var N := 8\n\n  type intArray = array of int\n\n  var row := intArray [ N ] of 0\n  var col := intArray [ N ] of 0\n  var diag1 := intArray [N+N-1] of 0\n  var diag2 := intArray [N+N-1] of 0\n\n  function printboard() =\n    (for i := 0 to N-1 do\n     (for j := 0 to N-1 do\n        print(if col[i]=j then " O" else " .");\n        print("\\n"));\n      print("\\n"))\n\n  function try(c:int) = (\n    if c=N\n    then printboard()\n    else for r := 0 to N-1 do\n      if row[r]=0 & diag1[r+c]=0 & diag2[r+7-c]=0\n          then (\n            row[r]:=1;\n            diag1[r+c]:=1;\n            diag2[r+7-c]:=1;\n            col[c]:=r;\n            try(c+1);\n            row[r]:=0;\n            diag1[r+c]:=0;\n            diag2[r+7-c]:=0 ) )\nin\n  try(0);\n  0\nend\n'.trim()},d={"Compiler IR":[{title:"Compiler IR",do:(0,a.Fr)(o.compileIR),options:[],editorLanguage:"tiger"}],"X86 Assembly":[{title:"X86 Assembly",do:(0,a.Fr)(o.compileX86),options:[],editorLanguage:"asm"}]},p={tiger:{syntax:{defaultToken:"invalid",builtin_types:["nat","bool","?","_"],keywords:["if","then","else","for","to","while","do","type","function","var","break","let","in","end","array","of","nil","int","string","print","flush","get_char","ord","chr","size","substring","concat","not","exit"],operators:[":=","+","-","*","/","|","&"],symbols:/[=><!~?:&|+\-*\/\^%]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[[/(Syntax error.*)/,"error"],[/(Parse error.*)/,"error"],[/[a-zA-Z_][a-zA-Z_0-9\w$]*/,{cases:{"@builtin_types":"keyword.type","@keywords":"keyword","@default":"identifier"}}],[/[a-z_$][\w$]*/,{cases:{"@builtin_types":"keyword","@keywords":"keyword","@default":"identifier"}}],{include:"@whitespace"},[/[{}()\[\]]/,"@brackets"],[/[<>](?!@symbols)/,"@brackets"],[/@symbols/,{cases:{"@operators":"operator","@default":""}}],[/\d*\.\d+([eE][\-+]?\d+)?/,"number.float"],[/0[xX][0-9a-fA-F]+/,"number.hex"],[/\d+/,"number"],[/[;,.]/,"delimiter"],[/"([^"\\]|\\.)*$/,"string.invalid"],[/"/,{token:"string.quote",bracket:"@open",next:"@string"}],[/'[^\\']'/,"string"],[/(')(@escapes)(')/,["string","string.escape","string"]],[/'/,"string.invalid"]],comment:[[/[^\/*]+/,"comment"],[/\/\*/,"comment","@push"],["\\*/","comment","@pop"],[/[\/*]/,"comment"]],string:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,{token:"string.quote",bracket:"@close",next:"@pop"}]],whitespace:[[/[ \t\r\n]+/,"white"],[/\/\*/,"comment","@comment"],[/\/\/.*$/,"comment"]]}}},asm:{syntax:s.L}};t.default=function(){return r.createElement(i.Z,{title:"Tiger Playground",language:"tiger",source:"https://github.com/ayazhafiz/tiger",grammar:"https://github.com/ayazhafiz/tiger/blob/base/lib/front/parser.mly",languageRegistrations:p,backends:d,defaultBackend:"X86 Assembly",examples:c,defaultExample:"Eight Queens"})}},70589:function(){},60465:function(){}}]);
//# sourceMappingURL=component---src-pages-playground-tiger-tsx-69b54da182b423ffe1a6.js.map