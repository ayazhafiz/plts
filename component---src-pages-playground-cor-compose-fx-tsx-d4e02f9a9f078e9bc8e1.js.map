{"version":3,"file":"component---src-pages-playground-cor-compose-fx-tsx-d4e02f9a9f078e9bc8e1.js","mappings":"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","sources":["webpack://www/./src/components/cor.tsx","webpack://www/./src/pages/playground/cor/compose_fx.tsx"],"sourcesContent":["import type * as monaco from \"monaco-editor\";\nimport * as React from \"react\";\nimport Playground from \"./playground\";\nimport type {\n  Backend,\n  BackendOverrides,\n  LanguageRegistration,\n  StringOptions,\n} from \"../common/types\";\nimport {shapeBackend} from \"../common/util\";\nimport * as cor from \"cor\";\nimport {useStaticQuery, graphql} from \"gatsby\";\n\nfunction getBackends(\n  lang: string,\n  defaultEmit: string,\n  overrides: Record<string, BackendOverrides>\n): Record<string, [Backend]> {\n  const backends: Record<string, [Backend]> = {};\n  for (const phase of cor.phases) {\n    const doit = (prog: string, emit: string) =>\n      cor.compile(prog, lang, phase, emit);\n    const options: [[string, StringOptions]] = [\n      [\"emit\", {value: defaultEmit, options: cor.emits}],\n    ];\n    const backend: Backend = {\n      title: phase,\n      editorLanguage: overrides[phase]?.editorLanguage ?? lang,\n      ...shapeBackend(doit, options),\n    };\n    backends[phase] = [backend];\n  }\n  return backends;\n}\n\nfunction createHover(lang: string): LanguageRegistration[\"hover\"] {\n  return (m: typeof monaco) =>\n    (model: monaco.editor.ITextModel, pos: monaco.Position) => {\n      const program = model.getValue();\n      const hover = cor.hover(program, lang, pos.lineNumber, pos.column);\n      const {\n        info,\n        range: {start, fin},\n      } = hover;\n      return {\n        range: new m.Range(start.line, start.col, fin.line, fin.col),\n        contents: info.map((value) => {\n          return {value};\n        }),\n      };\n    };\n}\n\nconst CorPlayground: React.FC<{\n  experiment: string;\n  defaultPhase: string;\n  defaultEmit: string;\n  backendOverrides?: Record<string, BackendOverrides>;\n  languageRegistrations?: Record<string, LanguageRegistration>;\n}> = ({\n  experiment,\n  defaultPhase,\n  defaultEmit,\n  backendOverrides = {},\n  languageRegistrations = {},\n}) => {\n    if (languageRegistrations[experiment]) {\n      languageRegistrations[experiment].hover = createHover(experiment);\n    }\n\n    const allExamples = useStaticQuery(graphql`\n    {\n      allFile(filter: { extension: { eq: \"roc\" } }) {\n        nodes {\n          publicURL\n          relativePath\n        }\n      }\n    }\n  `);\n\n    const [examples, setExamples] = React.useState<Record<string, string>>({});\n\n    React.useEffect(() => {\n      async function go() {\n        const newExamples: Record<string, string> = {};\n        for (const file of allExamples.allFile.nodes) {\n          if (file.relativePath.includes(`/${experiment}/`)) {\n            const exampleName = file.relativePath\n              .split(\"/\")\n              .at(-1)\n              .split(\".roc\")[0];\n            const base = process.env[\"HOST\"];\n            const s = await fetch(new URL(file.publicURL, base))\n              .then((r) => r.text())\n              .then((s) => {\n                return cor.userProgram(s);\n              });\n            newExamples[exampleName] = s;\n          }\n        }\n        setExamples(newExamples);\n      }\n      go();\n    }, [allExamples.allFile.nodes, experiment]);\n\n    return (\n      <Playground\n        title={`cor/${experiment} Playground`}\n        language={experiment}\n        source={`https://github.com/ayazhafiz/cor/tree/base/experiments/${experiment}`}\n        grammar={`https://github.com/ayazhafiz/cor/blob/base/experiments/${experiment}/parser.mly`}\n        languageRegistrations={languageRegistrations}\n        backends={getBackends(experiment, defaultEmit, backendOverrides)}\n        defaultBackend={defaultPhase}\n        examples={examples}\n        defaultExample={Object.keys(examples)[0]}\n      />\n    );\n  };\n\nexport default CorPlayground;\n","import type * as monaco from \"monaco-editor\";\nimport * as React from \"react\";\nimport {LanguageRegistration} from \"../../../common/types\";\nimport CorPlayground from \"../../../components/cor\";\n\nconst compose_fx = \"compose_fx\";\n\nconst composeFxSyntax: monaco.languages.IMonarchLanguage = {\n  defaultToken: \"invalid\",\n\n  keywords: [\"sig\", \"let\", \"run\", \"in\", \"\\\\\"],\n  symbols: /[_{}|<>\\\\?\\->.:=!;[\\]+]|(->)/,\n  lower: /[a-z][a-zA-Z0-9_'\\w$]*/,\n\n  tokenizer: {\n    root: [\n      [/(.*error.*)/, \"error\"],\n      [/proto\\s*/, \"keyword\", \"@proto\"],\n      [\n        /@lower/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"identifier\",\n          },\n        },\n      ],\n      [/[A-Z][a-zA-Z0-9_'\\w$]*/, \"constructor\"],\n      {include: \"@whitespace\"},\n      [/[()]/, \"@brackets\"],\n      [/`\\d+/, \"tag\"],\n      [/~\\d+/, \"tag\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"operator\",\n          },\n        },\n      ],\n    ],\n    proto: [[/@lower/, \"identifier\", \"@protoArg\"]],\n    protoArg: [\n      [/@lower/, \"type\", \"@protoArg\"],\n      [/:/, \"operator\", \"@type\"],\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/#\\s+[\\^]+$/, \"comment\"],\n      [/#\\s+[\\^]+/, \"comment\", \"@type\"],\n      [/#.*$/, \"comment\"],\n    ],\n    type: [\n      [/\\(\\)$/, \"keyword.type\", \"@popall\"],\n      [/\\(\\)/, \"keyword.type\"],\n      [/->|[+,]/, \"operator\"],\n      [/-\\[/, \"type\"],\n      [/\\]->$/, \"type\", \"@popall\"],\n      [/\\]->/, \"type\"],\n      [/([`?]\\d+)$/, \"tag\", \"@popall\"],\n      [/([`?]\\d+)/, \"tag\"],\n      [\n        /(~\\d+)(:)([a-z]+|\\?\\d+)(:)([a-z][a-zA-Z0-9]*)/,\n        [\"tag\", \"operator\", \"type\", \"operator\", \"identifier\"],\n      ],\n      [/[a-zA-Z][a-zA-Z0-9_']*$/, \"type\", \"@popall\"],\n      [/[a-zA-Z][a-zA-Z0-9_']*/, \"type\"],\n      [/[()[\\]]$/, \"@brackets\", \"@popall\"],\n      [/[()[\\]]/, \"@brackets\"],\n      [/[ \\t]*$/, \"@whitespace\", \"@popall\"],\n      [/[ \\t]+/, \"@whitespace\"],\n    ],\n  },\n};\n\nconst languageRegistrations: Record<typeof compose_fx, LanguageRegistration> = {\n  [compose_fx]: {\n    syntax: composeFxSyntax,\n  },\n};\n\nconst ComposeFxPlayground: React.FC = () =>\n  CorPlayground({\n    experiment: compose_fx,\n    defaultPhase: \"solve\",\n    defaultEmit: \"elab\",\n    languageRegistrations,\n  });\n\nexport default ComposeFxPlayground;\n"],"names":["getBackends","lang","defaultEmit","overrides","backends","phase","cor","_overrides$phase$edit","_overrides$phase","doit","prog","emit","options","value","backend","title","editorLanguage","shapeBackend","_ref","experiment","defaultPhase","backendOverrides","languageRegistrations","hover","m","model","pos","program","getValue","lineNumber","column","info","range","start","fin","Range","line","col","contents","map","allExamples","useStaticQuery","examples","setExamples","React","async","newExamples","file","allFile","nodes","relativePath","includes","exampleName","split","at","base","process","s","fetch","URL","publicURL","then","r","text","go","Playground","language","source","grammar","defaultBackend","defaultExample","Object","keys","compose_fx","syntax","defaultToken","keywords","symbols","lower","tokenizer","root","cases","include","proto","protoArg","whitespace","type","ComposeFxPlayground","CorPlayground"],"sourceRoot":""}