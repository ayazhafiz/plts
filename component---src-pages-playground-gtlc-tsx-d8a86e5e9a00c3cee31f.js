(self.webpackChunkwww=self.webpackChunkwww||[]).push([[3458],{97974:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{C:function(){return C},TS:function(){return TS}});var typescript__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(94625),typescript__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(typescript__WEBPACK_IMPORTED_MODULE_0__);const C={title:"Execution (Clang 12.0.1, -O3)",async eval(e){if(null===e.result)return e;const t=await fetch("https://godbolt.org/api/compiler/cclang1201/compile",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({source:e.result,options:{userArguments:"-O3",compilerOptions:{executorRequest:!0},filters:{execute:!0},tools:[]},lang:"c",allowStoreCodeDebug:!0})}).then((e=>e.json()));return-1===t.code?{result:null,error:`Unexpected compilation error:\n${JSON.stringify(t.buildResult.stderr)}`}:{result:t.stdout[0].text,error:null}}},TS={title:"JS Execution",async eval(input){if(input.error)return input;const jsCode=(0,typescript__WEBPACK_IMPORTED_MODULE_0__.transpile)(input.result);try{const result=await eval(jsCode);return{result:`${result}`,error:null}}catch(e){return{result:null,error:e.message}}}}},90163:function(e,t,n){"use strict";n.r(t);var r=n(27378),o=n(73530),i=n(67715),a=n(97974),l=n(28407),s=n(57621);const c={"Cast Error":"(λx. succ x) #t","Closure Passing":"\nlet apply1To = λf: ? -> nat. f 1 in\napply1To (λx: nat. succ x)\n".trim(),"Large Closures":"\nlet add8 =\n  \\a. \\b. \\c. \\d. \\e. \\f. \\g. \\h.\n  add a (add b (add c (add d (add e (add f (add g h)))))) in\nadd8 1 2 3 4 5 6 7 8\n".trim(),"Fixpoint Combinator":"\nlet fix = λf. (λx. f (λy. x x y)) (λx. f (λy. x x y)) in\nlet fib = λn: _.\n  let go' = λgo: _. λi: _. λa: _. λb: _.\n    if eqn i n\n    then a\n    else go (succ i) b (add a b)\n  in\n  let go = fix go' in\n  go 0 0 1\nin\nfib 23\n".trim(),"Type Inference":"\n\\f: ((? -> nat) -> (bool -> ?)) -> ((nat -> ?) -> (? -> bool)) -> nat.\n  \\y: _.\n    f y y\n".trim(),References:"\nlet fact_cell: _ = ref (\\n: _. 0) in\nfact_cell := \\n: _.\n    if eqn n 0\n    then 1\n    else mult n (!fact_cell (pred n));\nlet fact: _ = !fact_cell in\nfact 6\n".trim()},u=[["width",55]],p=[["optimize",!0]].concat(u),f={Infer:[{title:"Infer",editorLanguage:"gtlc",...(0,l.Pt)(s.infer,u)}],"Compiler IR":[{title:"Lift IR",editorLanguage:"liftIr",...(0,l.Pt)(s.irCompile,p)},{title:"Interpreter Execution",editorLanguage:"gtlc",...(0,l.Pt)(s.doEval,u)}],TypeScript:[{title:"TypeScript",editorLanguage:"typescript",...(0,l.Pt)(s.tsCompile,p)},{title:a.TS.title,editorLanguage:"javascript",...(0,l.oV)(((e,t)=>{const n=(0,s.tsCompile)(e,!0,t);return a.TS.eval(n)}),u)}],C:[{title:"C",editorLanguage:"c",...(0,l.Pt)(s.cCompile,p)},{title:a.C.title,editorLanguage:"c",...(0,l.oV)(((e,t)=>{const n=(0,s.cCompile)(e,!0,t);return a.C.eval(n)}),u)}]},d=s.docs,_=d.map((e=>e.name)),y=r.createElement(o.D,null,`\n**Expressions**\n\n- \`x\`: variables\n- \`100\`: numbers\n- \`#t|#f\`: the true and false literals\n- \`(\\|λ)x: t. e\`: a lambda expression with \`x\` bound to type \`t\`\n- \`let x: t = e1 in e2\`: binds \`x\` to \`e1\` and then evaluates \`e2\`\n- \`f a\`: application to a lambda\n- \`if e1 then e2 else e3\`: an if-then-else expression\n- \`ref e\`: boxes \`e\` and returns a reference to it\n- \`!r\`: unboxes the value at reference \`r\`\n- \`r := e\`: places the value of \`e\` in the reference \`r\`\n\nAll type annotations of form \`: t\` are optional. If not specified, the\ntype defaults to the unknown type \`?\`. There is also the special type marker\n\`_\`, which instructs the compiler to infer a principal type.\n\n**Types**\n\n- \`?\`: the unknown type, admitting any value\n- \`_\`: mark type to be inferred\n- \`nat\`: the type of natural numbers\n- \`bool\`: the type of booleans\n- \`t1 -> t2\`: function type\n- \`ref t\`: a reference type\n\n**Builtin Functions**\n\n${d.map((e=>{let{name:t,ty:n,doc:r}=e;return`- \`${t}: ${n}\`\n\t- ${r}`})).join("\n")}\n\n[Full Parser Specification](https://github.com/ayazhafiz/plts/blob/base/gtlc/parser.mly)\n`.trim()),b={gtlc:{syntax:{defaultToken:"invalid",builtin_types:["nat","bool","?","_"],keywords:["let","in","ref","if","then","else","λ","\\"].concat(_),symbols:/[_<>\\?\->.:=!;\u03BB]|(->)/,tokenizer:{root:[[/(Syntax error.*)/,"error"],[/(Parse error.*)/,"error"],[/`\(/,"infer","@infer"],[/`(nat|bool|\?)/,"infer"],[/#[tf]/,"keyword"],[/[a-z][a-zA-Z0-9_'\w$]*/,{cases:{"@builtin_types":"keyword.type","@keywords":"keyword","@default":"identifier"}}],[/\d+/,"number"],{include:"@whitespace"},[/[()]/,"@brackets"],[/@symbols/,{cases:{"@builtin_types":"keyword.type","@keywords":"keyword","@default":"operator"}}]],infer:[[/[^()]+/,"infer"],[/\(/,"infer","@push"],[/\)/,"infer","@pop"]],whitespace:[[/(\uFF5C.*$)/,"annotation"],[/[ \t\r\n]+/,"white"],[/(--.*$)/,"comment"]]}},hover:e=>(t,n)=>{const r=t.getValue(),o=(0,s.getHover)(r,n.lineNumber,n.column);if(null===o)return null;const{info:i,range:{startPos:a,endPos:l}}=o;return{range:new e.Range(a.line,a.col,l.line,l.col),contents:i.map((e=>({value:e})))}}},liftIr:{syntax:{defaultToken:"invalid",builtin_types:["nat","bool","?","Clos"],keywords:["fn","decl","apply","pack","let","in","if","then","else","λ","\\"].concat(_),symbols:/[,;<>\\?\->.:=\u03BB]+/,tokenizer:{root:[[/(Syntax error.*)/,"error"],[/(Parse error.*)/,"error"],[/[a-zA-Z_'][a-zA-Z_'\w$]*/,{cases:{"@builtin_types":"keyword.type","@keywords":"keyword","@default":"identifier"}}],[/\d+/,"number"],{include:"@whitespace"},[/[{()}]/,"@brackets"],[/@symbols/,{cases:{"@builtin_types":"keyword.type","@keywords":"keyword","@default":"operator"}}]],whitespace:[[/[ \t\r\n]+/,"white"],[/(--.*$)/,"comment"]]}}}};t.default=()=>r.createElement(i.Z,{title:"GTLC Playground",language:"gtlc",source:"https://github.com/ayazhafiz/plts/tree/base/gtlc",grammar:y,languageRegistrations:b,backends:f,defaultBackend:"C",examples:c,defaultExample:"Fixpoint Combinator"})},13841:function(e){function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=function(){return[]},t.resolve=t,t.id=13841,e.exports=t},82870:function(){},69620:function(){},37424:function(){},19107:function(){},80444:function(){},46170:function(){},91157:function(){},61638:function(){},22147:function(){},81206:function(){}}]);
//# sourceMappingURL=component---src-pages-playground-gtlc-tsx-d8a86e5e9a00c3cee31f.js.map